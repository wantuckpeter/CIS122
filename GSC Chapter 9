# Program:      Lesson 9 Girl Scout Cookies
# Programmer:   Peter Wantuck 
# Date:         3/13/2016
# Purpose:      Purpose of the program is to add lists to GSC.

# Define the variables for future use or you'll be in trouble.
import locale
locale.setlocale( locale.LC_ALL, '')
         
order_total = 0.0       
price =3.5
fmt_price = locale.currency(price, grouping=True)


cookie_list = []
cookie_list = "Savannah Thin-Mints Tag-a-longs Peanut-Butr Sandwich".split()

order_list = []

# Display cookie choices
def disp_items():
    print("please choose one of our flavors. Enter the item number to choose")

    for c in range(len(cookie_list)):
        print("{}.\t{}".format(c+1,cookie_list[c]))

    print()

#**********
#
# Main Program
#
#**********

# Banner
print("Welcome to the Girl Scout Cookie")
print("Order Program")

cust = input("\nplease enter your name> ")
# menu choices
while True:

    choice = disp_menu()

    if choice == "a":
        add_process()
    elif choice == "d":
        del_item()
    elif choice == "q":
        break
# display the order so far
    disp_order()

disp_order()
print("Thank you for your order")

def disp_menu():
    choice_list = ["a", "d", "m", "q"]

    while True:
        print("What would you like to do with this menu?")
        print("a = Add an item, you know you should add something")
        print("d = Delete an item, no don't do this please!")
        print("m = Display the meal so far, you know you want to know")
        print("q = Quit, leave me then I won't be sad or angry")
        print()
        choice = input("Make a selection > ")
        print()
        if choice in choice_list:
            return choice
        else:
            print("I do not understand that Entry. Try again, and put more effort in.")


def calc_tot(qty):
    return qty * 3.5

# add process

def add_process():
    valid_data = False

    while not valid_data:

        disp_items()

        try:
            item = int(input("enter item number> "))

            if 1 <= item <= len(cookie_list):
                valid_data = True
            else:
                print("\nThat was not a valid choice, please try again.")
        except Exception as detail:
            print("error: ", detail)
# reset flag
    valid_data = False

    while not valid_data:
        try:
            qty = int(input("enter quantity> "))

            if 1 <= qty <= 10:
                valid_data = True
            else:
                print("\nThat was not a valid quantity, please try again")
        except Exception as detail:
            print("error: ", detail)
            print("please try again")
    item_total = calc_tot(qty)
    fmt_total = locale.currency(item_total, grouping=True)


# display user choice
print("\nYou choose: {} boxes of {} for a total of {}".format(qty, cookie_list[item-1]. fmt_total))    



print()


# verify inclusion of item

valid_data = False

while not valid_data:
    incl = input("would you like to add this to your order? (y/n)> ")
    print()
    if incl.lower() == "y":

        inx = item - 1

        detail_list = [inx, qty]
        order_list.append(detail_list)

        valid_data = True
        print("{} was added to your order".format(cookie_list[inx]))

    elif incl.lower() == "n":
        print("{} was not added to your order".format(cookie_list[inx]))
        valid_data = True

    else:
        print("that was not a valid response, please try again")


# option to delete

def del_item():
    if len(order_list) == 0:
        print("You have no items to delete, why are you even in this menu? **\n")
    else:
        print("\nDelete an item.")
        disp_order()

        valid_data = False
        while not valid_data:
            try:
                choice = int(input("Please enter the item number you would like to delete > "))
                if 1<= choice <= len(order_list):

                    choice = choice - 1

                    print("Item {}. {} with {} boxes will be deleted, why would you make it feel left out?".format(choice + 1, order_list[choice][0], order_list[choice][1]))

                    del order_list[choice]
                    valid_data = True
                    
            except Exception as detail:
                print("Error: ", detail)
                print("Please try again, and with more effort this time")



